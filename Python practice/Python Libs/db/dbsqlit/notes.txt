
Python ‡¶è‡¶∞ sqlite3 ‡¶Æ‡¶°‡¶ø‡¶â‡¶≤‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶Ü‡¶™‡¶®‡¶ø ‡¶Ø‡ßá‡¶∏‡¶¨ Database Methods / Functions / API ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®, ‡¶®‡¶ø‡¶ö‡ßá ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶®‡ßç‡¶Ø‡¶∏‡ßç‡¶§‡¶≠‡¶æ‡¶¨‡ßá ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶≤‡ßã, ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Ü‡¶™‡¶®‡¶ø CRUD (Create, Read, Update, Delete) ‡¶è‡¶¨‡¶Ç ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶ï‡¶æ‡¶ú ‡¶∏‡¶π‡¶ú‡ßá ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§

üî∂ 1. sqlite3.connect(database_name)
‡¶ï‡¶æ‡¶ú: ‡¶°‡ßá‡¶ü‡¶æ‡¶¨‡ßá‡¶∏‡ßá ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó ‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶® ‡¶ï‡¶∞‡ßá

python
conn = sqlite3.connect('mydb.db')
üî∂ 2. connection.cursor()
‡¶ï‡¶æ‡¶ú: ‡¶°‡ßá‡¶ü‡¶æ‡¶¨‡ßá‡¶ú‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø cursor ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá

python
cursor = conn.cursor()
üî∂ 3. cursor.execute(sql, parameters)
‡¶ï‡¶æ‡¶ú: SQL ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° execute ‡¶ï‡¶∞‡ßá

python
cursor.execute("SELECT * FROM table_name")
üî∂ 4. cursor.executemany(sql, seq_of_parameters)
‡¶ï‡¶æ‡¶ú: ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï ‡¶á‡¶®‡¶∏‡¶æ‡¶∞‡ßç‡¶ü ‡¶¨‡¶æ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶ï‡¶∞‡¶§‡ßá

python
data = [("Omar", 20), ("Rahim", 21)]
cursor.executemany("INSERT INTO students (name, age) VALUES (?, ?)", data)
data = [("Omar", 20), ("Rahim", 21)]

cursor.executemany("INSERT INTO students (name, age) VALUES (?, ?)", data)

üî∂ 5. cursor.fetchall()
‡¶ï‡¶æ‡¶ú: ‡¶∏‡¶¨ rows ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá (list of tuples)

python
rows = cursor.fetchall()
üî∂ 6. cursor.fetchone()
‡¶ï‡¶æ‡¶ú: ‡¶™‡ßç‡¶∞‡¶•‡¶Æ row ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá

python
row = cursor.fetchone()
üî∂ 7. cursor.fetchmany(size)
‡¶ï‡¶æ‡¶ú: ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶ï rows ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá

python
rows = cursor.fetchmany(5)
üî∂ 8. connection.commit()
‡¶ï‡¶æ‡¶ú: ‡¶°‡ßá‡¶ü‡¶æ‡¶¨‡ßá‡¶ú‡ßá ‡¶ö‡ßÇ‡ßú‡¶æ‡¶®‡ßç‡¶§‡¶≠‡¶æ‡¶¨‡ßá ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® save ‡¶ï‡¶∞‡ßá

python
conn.commit()
üî∂ 9. connection.rollback()
‡¶ï‡¶æ‡¶ú: ‡¶≠‡ßÅ‡¶≤ ‡¶π‡¶≤‡ßá ‡¶°‡ßá‡¶ü‡¶æ ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶æ‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡ßü ‡¶´‡¶ø‡¶∞‡¶ø‡ßü‡ßá ‡¶®‡ßá‡ßü

python
conn.rollback()
üî∂ 10. connection.close()
‡¶ï‡¶æ‡¶ú: ‡¶°‡ßá‡¶ü‡¶æ‡¶¨‡ßá‡¶ú ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßá

python
conn.close()
üî∂ 11. cursor.close()
‡¶ï‡¶æ‡¶ú: Cursor ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßá

python
cursor.close()
üî∂ 12. cursor.lastrowid
‡¶ï‡¶æ‡¶ú: ‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ insert ‡¶π‡¶ì‡ßü‡¶æ row-‡¶è‡¶∞ ID

python
cursor.execute("INSERT INTO students (name, age) VALUES (?, ?)", ("Karim", 22))
print(cursor.lastrowid)
üî∂ 13. cursor.rowcount
‡¶ï‡¶æ‡¶ú: ‡¶ï‡¶§‡¶ü‡¶ø row ‡¶™‡ßç‡¶∞‡¶≠‡¶æ‡¶¨‡¶ø‡¶§ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶§‡¶æ ‡¶¨‡¶≤‡ßá

python
cursor.execute("DELETE FROM students WHERE age > 25")
print(cursor.rowcount)
üî∂ 14. sqlite3.connect(':memory:')
‡¶ï‡¶æ‡¶ú: RAM-‡¶è ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ö‡¶∏‡ßç‡¶•‡¶æ‡ßü‡ßÄ ‡¶á‡¶®-‡¶Æ‡ßá‡¶Æ‡ßã‡¶∞‡¶ø ‡¶°‡ßá‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá

python
conn = sqlite3.connect(':memory:')
üî∂ 15. connection.total_changes
‡¶ï‡¶æ‡¶ú: ‡¶è‡¶á ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó‡ßá ‡¶Æ‡ßã‡¶ü ‡¶ï‡¶§‡¶ü‡¶ø ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶§‡¶æ‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ

python
print(conn.total_changes)
üî∂ 16. sqlite3.version / sqlite3.sqlite_version
‡¶ï‡¶æ‡¶ú: Python sqlite3 ‡¶Æ‡¶°‡¶ø‡¶â‡¶≤ ‡¶ì SQLite engine-‡¶è‡¶∞ ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡¶ú‡¶æ‡¶®‡¶æ‡ßü

python
import sqlite3
import sqlite3
print(sqlite3.version)
print(sqlite3.sqlite_version)
Extra: Table structure ‡¶ú‡¶æ‡¶®‡¶æ (pragma)
python
cursor.execute("PRAGMA table_info(students)")
print(cursor.fetchall())
Summary Table:
Method	Description
connect()	Connects to DB
cursor()	Creates cursor
execute()	Executes SQL
executemany()	Executes many
fetchall()	Fetch all rows
fetchone()	Fetch one row
fetchmany()	Fetch limited rows
commit()	Save changes
rollback()	Undo changes
close()	Close DB
lastrowid	Get last inserted ID
rowcount	Get affected row count
PRAGMA	Get table schema

