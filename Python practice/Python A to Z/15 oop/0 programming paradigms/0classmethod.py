# class method is a method that is bound to the class and not the instance of the class
# class method can modify class state that applies across all instances of the class

# class method ‡¶π‡¶≤‡ßã ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Æ‡ßá‡¶•‡¶° ‡¶Ø‡ßá‡¶ü‡¶ø class ‡¶è‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá, object ‡¶¨‡¶æ instance-‡¶è‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶®‡¶æ‡•§
# class method ‡¶è ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶™‡ßç‡¶Ø‡¶æ‡¶∞‡¶æ‡¶Æ‡¶ø‡¶ü‡¶æ‡¶∞ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá self ‡¶®‡¶æ ‡¶¶‡¶ø‡ßü‡ßá cls ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü, ‡¶ï‡¶æ‡¶∞‡¶£ ‡¶è‡¶ü‡¶ø ‡¶™‡ßÅ‡¶∞‡ßã class ‡¶ï‡ßá represent ‡¶ï‡¶∞‡ßá, ‡¶Ø‡ßá‡¶Æ‡¶®: University class‡•§
# cls.university_name ‡¶π‡¶ö‡ßç‡¶õ‡ßá class variable university_name ‡¶ï‡ßá access ‡¶ï‡¶∞‡¶æ‡•§
# ‡¶Æ‡¶æ‡¶®‡ßá üëâ class variable read ‡¶¨‡¶æ modify ‡¶ï‡¶∞‡¶§‡ßá

class University:
    university_name = "AUST University Bangladesh"

    def __init__(self, department, location):
        self.department = department
        self.location = location

    @classmethod
    def get_university_name(cls):
        return cls.university_name  # class method is used to modify class state that applies across all instances of the class
    
    @classmethod
    def set_university_name(cls, university_name):
        cls.university_name = university_name

    def display(self):
        print(self.department, self.location)  # instance method

    def __str__(self):
        return f"{self.university_name} {self.department} {self.location}"  # instance method

university1 = University("CSE", "Dhaka")
university2 = University("EEE", "Chittagong")

print("Before University name: ", university1.get_university_name())
university1.set_university_name("DIU")
print("After University name: ", university1.get_university_name())